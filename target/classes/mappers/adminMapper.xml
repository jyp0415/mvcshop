<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="com.board.mappers.adminMapper">

	<!-- 카테고리 호출 -->
	<select id="category" resultType="com.board.domain.CategoryVO">
		WITH recursive cte AS
		(
		SELECT 1
		AS LEVEL,
		cateName,
		cateCode,
		cateCodeRef
		FROM goods_category
		WHERE
		cateCodeRef IS null
		UNION all
		SELECT 1+LEVEL AS LEVEL,
		p.cateName,
		p.cateCode,
		p.cateCodeRef
		FROM goods_category p
		INNER JOIN cte
		ON
		p.cateCodeRef=cte.cateCode
		)
		SELECT LEVEL,
		cateName,cateCode,IFNULL(cateCodeRef,0)AS cateCodeRef
		FROM cte;
	</select>

	<insert id="register">
		INSERT INTO
		tbl_goods(gdsNum,gdsName,cateCode,gdsPrice,gdsStock,gdsDes,gdsImg,gdsThumbImg)
		VALUES(NEXTVAL(tbl_goods_seq),#{gdsName},#{cateCode},#{gdsPrice},#{gdsStock},#{gdsDes}
		,#{gdsImg},#{gdsThumbImg}
		);
	</insert>

	<!-- 상품 목록 <select id="goodslist" resultType="com.board.domain.GoodsVO"> 
		SELECT gdsNum ,gdsName, cateCode,gdsPrice,gdsStock,gdsDes,gdsImg,gdsDate 
		FROM tbl_goods ORDER BY gdsNum DESC; </select> -->
	<select id="goodslist" resultType="com.board.domain.GoodsJoinCate">
		select
		g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef,c.cateName,gdsPrice,gdsStock,
		gdsDes,gdsImg, gdsDate,
		g.gdsImg,g.gdsThumbImg from tbl_goods g inner join goods_category c on g.cateCode =
		c.cateCode
	</select>

	<!-- 특정 상품 조회 -->
	<select id="goodsView"
		resultType="com.board.domain.GoodsJoinCate">
		SELECT
		g.gdsNum,g.gdsName,g.cateCode,c.cateCodeRef,c.cateName,
		gdsPrice,gdsStock,gdsDes,gdsImg,gdsDate,g.gdsImg,g.gdsThumbImg
		FROM
		tbl_goods g
		inner join goods_category c
		on g.cateCode=c.cateCode
		WHERE
		gdsNUM=#{gdsNum}
	</select>
	<!-- 수정 -->
	<update id="goodsModify">
		update tbl_goods set
		gdsName=#{gdsName},
		cateCode=#{cateCode},
		gdsPrice=#{gdsPrice},
		gdsStock=#{gdsStock},
		gdsDes=#{gdsDes},

		gdsImg=#{gdsImg},
		gdsThumbImg=#{gdsThumbImg}
		where
		gdsNum=#{gdsNum}
	</update>

	<!-- 삭제 -->
	<delete id="goodsDelete">
		delete from tbl_goods where gdsNum=#{gdsNum}
	</delete>
	
	<select id="orderList" resultType="com.board.domain.OrderVO">
	select orderId,userId,orderRec,userAddr1,userAddr2,userAddr3,
	orderPhon,amount,orderDate,delivery
	from tbl_order;
	</select>
	
	<select id="orderView" resultType="com.board.domain.OrderListVO">
	SELECT o.orderId,o.userId,o.orderRec,o.userAddr1,o.userAddr2,o.userAddr3,
	o.orderPhon,o.amount,o.orderDate,o.delivery,d.orderDetailNum,d.gdsNum,d.cartStock,
	g.gdsName, g.gdsThumbImg,g.gdsPrice
	from tbl_order o
   INNER JOIN order_detail d
    ON o.orderId = d.orderId
    INNER JOIN tbl_goods g
    ON d.gdsNum = g.gdsNum 
    WHERE o.orderId=#{orderId}
	</select>
	<!-- 배송 상태 변경  -->
	<update id="deliveryChange">
	 UPDATE tbl_order
    SET delivery =#{delivery}
    WHERE orderId = #{orderId}
	</update>
	
	<!-- 상품 수량 조절  -->
	<update id="changeStock">
	update tbl_goods
	set gdsStock = gdsStock - #{gdsStock}
	where gdsNum = #{gdsNum}
	</update>
	<!-- 수량 조절하기 위해  gdsNum 구하기 위한 정보 -->
	<select id="changeStockInfo" resultType="com.board.domain.OrderDetailVO">
	SELECT orderId,gdsNum,cartStock
   from order_detail
    WHERE orderId=#{orderId}
	</select>
	<!-- 댓글 불러오기  -->
	<select id="allReply" resultType="com.board.domain.ReplyListVO">
		select
		r.gdsNum,r.userId,r.repNum,r.repDate,m.userName
		from board_reply r
		inner join tbl_member m
		on r.userId = m.userId
	</select>
	<!-- 댓글 지우기  -->
	<delete id="deleteReply">
	delete from board_reply
	where repNum = #{repNum}
	</delete>
	

</mapper>